{"version":3,"sources":["models/lift.ts","models/db.ts","models/dbconnector.ts","components/inputform.tsx","views/submitlift.tsx","components/button.tsx","views/home.tsx","components/tableelements.tsx","components/prtable.tsx","views/prs.tsx","components/menu.tsx","components/navbar.tsx","components/liftstable.tsx","views/lifts.tsx","App.tsx","index.tsx"],"names":["Lift","submission","id","lift","weight","reps","e1RM","date","this","estimate1rm","Math","round","LiftingLog","lifts","version","stores","table","Dexie","DbConnector","db","add","where","notEqual","orderBy","uniqueKeys","a","getAllEntries","toArray","allEntries","getAllExercises","uniqueExercises","prLifts","map","unique_exercise","found_lifts","filter","entry","highestE1RM","max","find","InputForm","dbConnector","useState","setWeight","setReps","e1rm","useForm","register","handleSubmit","style","width","onSubmit","newLiftData","event","newLift","addToDb","then","target","reset","TextField","label","marginTop","textAlign","required","valueAsNumber","onChange","parseInt","value","type","inputProps","step","min","disabled","isNaN","InputLabelProps","shrink","Button","variant","color","backgroundColor","SubmitLift","display","flexDirection","alignItems","Typography","paddingTop","GreyButton","textOnButton","href","marginRight","isRouter","component","RouterLink","to","Home","marginLeft","paddingLeft","paddingRight","height","Header","props","TableHead","TableRow","columns","column","TableCell","indexOf","Body","TableBody","pr_lifts","prLift","useStyles","makeStyles","tableColumns","PrTable","classes","setPrLifts","getPrLifts","useEffect","fillPrLifts","length","TableContainer","className","Paper","Table","PRs","Menu","React","open","setOpen","anchorRef","useRef","handleClose","current","contains","handleListKeyDown","key","preventDefault","prevOpen","focus","ref","undefined","onClick","Popper","anchorEl","role","placement","transition","disablePortal","TransitionProps","Grow","transformOrigin","MenuList","autoFocusItem","onKeyDown","MenuItem","NavBar","flexGrow","AppBar","background","position","Toolbar","Link","textDecoration","LiftsTable","setLifts","sortBy","reverse","fillAllLifts","AllLifts","App","Container","disableGutters","maxWidth","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62582eb1.chunk.js","sourcesContent":["export type LiftInput = {\n  lift: string;\n  weight: number;\n  reps: number;\n  date?: Date;\n};\n\nexport class Lift {\n  id: number;\n  lift: string;\n  weight: number;\n  reps: number;\n  e1RM: number;\n  date: Date;\n\n  constructor(submission: LiftInput) {\n    this.lift = submission.lift;\n    this.weight = submission.weight;\n    this.reps = submission.reps;\n    this.e1RM = Lift.estimate1rm(this.weight, this.reps);\n    if (submission.date) this.date = submission.date;\n  }\n\n  static estimate1rm(weight: number, reps: number): number {\n    if (reps === 1) {\n      return weight;\n    }\n    if (reps === 0) {\n      return 0;\n    }\n    return Math.round((1 + reps / 30) * weight);\n  }\n}\n","import Dexie from \"dexie\";\nimport { Lift } from \"./lift\";\n\nexport class LiftingLog extends Dexie {\n  lifts: Dexie.Table<Lift, number>;\n\n  constructor() {\n    super(\"db\");\n    this.version(1).stores({\n      lifts: \"++id,lift,weight,reps,e1rm,date\",\n    });\n    this.lifts = this.table(\"lifts\");\n  }\n}\n","import { Collection } from \"dexie\";\nimport { LiftingLog } from \"./db\";\nimport { Lift } from \"./lift\";\n\nexport class DbConnector {\n  db: LiftingLog;\n\n  constructor() {\n    this.db = new LiftingLog();\n  }\n\n  addToDb(lift: Lift): Promise<number> {\n    return this.db.lifts.add(lift);\n  }\n\n  getAllEntries(): Collection<Lift, number> {\n    return this.db.lifts.where(\"lift\").notEqual(\"\");\n  }\n\n  getAllExercises(): Promise<any[]> {\n    return this.db.lifts.orderBy(\"lift\").uniqueKeys();\n  }\n\n  async getPrLifts(): Promise<Lift[]> {\n    const allEntries = await this.getAllEntries().toArray();\n    const uniqueExercises = await this.getAllExercises();\n    const prLifts = uniqueExercises\n      .map((unique_exercise) => {\n        const found_lifts = allEntries.filter((entry) => {\n          return entry.lift === unique_exercise;\n        });\n        const highestE1RM = Math.max(\n          ...found_lifts.map((lift) => {\n            return lift.e1RM;\n          })\n        );\n        return found_lifts.find((lift) => lift.e1RM === highestE1RM);\n      })\n      .filter((lift) => typeof lift !== \"undefined\") as Lift[];\n    return prLifts;\n  }\n}\n","import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { Lift, LiftInput } from \"../models/lift\";\nimport { DbConnector } from \"../models/dbconnector\";\n\nexport default function InputForm() {\n  const dbConnector = new DbConnector();\n  const [weight, setWeight] = useState(0);\n  const [reps, setReps] = useState(0);\n  let e1rm = Lift.estimate1rm(weight, reps);\n  const { register, handleSubmit } = useForm<LiftInput>();\n  const onSubmit: SubmitHandler<LiftInput> = (newLiftData, event) => {\n    const newLift = new Lift(newLiftData);\n    dbConnector.addToDb(newLift).then(() => {\n      event?.target.reset();\n    });\n  };\n\n  return (\n    <form style={{ width: \"600px\" }} onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        <TextField\n          {...register(\"lift\")}\n          label=\"Lift\"\n          style={{ width: \"100%\", marginTop: \"10px\", textAlign: \"left\" }}\n          required\n        />\n      </div>\n      <div>\n        <TextField\n          {...register(\"weight\", {\n            valueAsNumber: true,\n          })}\n          onChange={(event) => {\n            setWeight(parseInt(event.target.value));\n            if (reps != 0 && weight != 0) {\n              e1rm = Lift.estimate1rm(weight, reps);\n            }\n          }}\n          label=\"Weight\"\n          type=\"number\"\n          style={{ width: \"100%\", marginTop: \"20px\" }}\n          inputProps={{\n            step: \"2.5\",\n            min: \"0\",\n          }}\n          required\n        />\n      </div>\n      <div>\n        <TextField\n          {...register(\"reps\", {\n            valueAsNumber: true,\n          })}\n          onChange={(event) => {\n            setReps(parseInt(event.target.value));\n            if (reps != 0 && weight != 0) {\n              e1rm = Lift.estimate1rm(weight, reps);\n            }\n          }}\n          label=\"Repetitions\"\n          type=\"number\"\n          style={{ width: \"100%\", marginTop: \"20px\" }}\n          inputProps={{\n            step: \"1.0\",\n            min: \"0\",\n            max: \"20\",\n          }}\n          required\n        />\n      </div>\n      <div>\n        <TextField\n          disabled\n          style={{ width: \"100%\", marginTop: \"20px\" }}\n          label=\"Estimated 1 RM\"\n          value={e1rm != 0 && !isNaN(e1rm) ? e1rm : \"\"}\n        />\n      </div>\n      <div>\n        <TextField\n          style={{ width: \"100%\", marginTop: \"20px\" }}\n          {...register(\"date\")}\n          label=\"Date\"\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </div>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        style={{\n          backgroundColor: \"#282c34\",\n          width: \"100%\",\n          marginTop: \"40px\",\n        }}\n      >\n        Submit\n      </Button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport InputForm from \"../components/inputform\";\n\nexport default function SubmitLift() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Typography variant=\"h6\" style={{ paddingTop: \"40px\", width: \"300px\" }}>\n        Enter a new PR for a Lift\n      </Typography>\n      <InputForm />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\ntype ButtonProps = {\n  textOnButton: string;\n  href?: string;\n  marginRight?: boolean;\n  isRouter?: boolean;\n};\n\nexport default function GreyButton({\n  textOnButton,\n  href,\n  marginRight,\n  isRouter,\n}: ButtonProps) {\n  return (\n    <Button\n      component={isRouter ? RouterLink : \"button\"}\n      to={href ? href : \"\"}\n      variant=\"contained\"\n      color=\"primary\"\n      style={{\n        marginRight: marginRight ? \"20px\" : \"\",\n        backgroundColor: \"#282c34\",\n        width: \"40%\",\n      }}\n    >\n      {textOnButton}\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport GreyButton from \"../components/button\";\n\nexport default function Home() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n        marginLeft: \"400px\",\n        marginRight: \"400px\",\n      }}\n    >\n      <Typography variant=\"h4\" style={{ paddingTop: \"40px\" }}>\n        PR Sheet\n      </Typography>\n      <Typography variant=\"h6\" style={{ paddingTop: \"20px\" }}>\n        Track your personal records.\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        style={{\n          paddingTop: \"20px\",\n          paddingLeft: \"100px\",\n          paddingRight: \"100px\",\n        }}\n      >\n        Do you even track, bro? As a serious lifter, you should keep track of\n        your lifting bro-gress. Not only will it motivate you to see those PRs\n        increasing as you get stronger, it will also help you determine if your\n        current program works. If you are tired of dealing with spreadsheets,\n        try this neat little web app to track your PRs. All data is saved\n        locally in your browser.\n      </Typography>\n      <div style={{ width: \"100%\", height: \"100%\", paddingTop: \"30px\" }}>\n        <GreyButton textOnButton=\"Track a Lift\" href=\"/submitlift\" isRouter />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\nimport { Lift } from \"../models/lift\";\n\ninterface HeaderProps {\n  columns: string[];\n}\n\ninterface BodyProps {\n  pr_lifts: Lift[];\n}\n\nexport function Header(props: HeaderProps) {\n  return (\n    <TableHead>\n      <TableRow>\n        {props.columns.map((column) => {\n          return (\n            <TableCell key={props.columns.indexOf(column)}>{column}</TableCell>\n          );\n        })}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport function Body(props: BodyProps) {\n  return (\n    <TableBody>\n      {props.pr_lifts.map((prLift) => {\n        return (\n          <TableRow key={prLift.id}>\n            <TableCell>{prLift.lift}</TableCell>\n            <TableCell>{prLift.weight}</TableCell>\n            <TableCell>{prLift.reps}</TableCell>\n            <TableCell>{prLift.date}</TableCell>\n            <TableCell>{prLift.e1RM}</TableCell>\n          </TableRow>\n        );\n      })}\n    </TableBody>\n  );\n}\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { DbConnector } from \"../models/dbconnector\";\nimport { Lift } from \"../models/lift\";\nimport {\n  Table,\n  TableContainer,\n  Paper,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Header, Body } from \"./tableelements\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"80%\",\n    height: \"auto\",\n    marginTop: \"40px\",\n  },\n});\n\nconst tableColumns = [\"Exercise\", \"Weight\", \"Reps\", \"Date\", \"e1RM\"];\n\nexport function PrTable() {\n  const dbConnector = new DbConnector();\n  const classes = useStyles();\n  const [prLifts, setPrLifts] = useState<Lift[]>([]);\n\n  useEffect(() => {\n    fillPrLifts();\n  });\n\n  async function fillPrLifts() {\n    const prLifts = await dbConnector.getPrLifts();\n    setPrLifts(prLifts);\n  }\n\n  if (prLifts.length > 0) {\n    return (\n      <TableContainer className={classes.table} component={Paper}>\n        <Table>\n          <Header columns={tableColumns} />\n          <Body pr_lifts={prLifts} />\n        </Table>\n      </TableContainer>\n    );\n  } else {\n    return (\n      <Typography\n        variant=\"subtitle1\"\n        style={{ paddingTop: \"20px\", width: \"300px\" }}\n      >\n        ... must be tracked first.\n      </Typography>\n    );\n  }\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport GreyButton from \"../components/button\";\nimport { PrTable } from \"../components/prtable\";\n\nexport default function PRs() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n        marginLeft: \"300px\",\n        marginRight: \"300px\",\n      }}\n    >\n      <Typography variant=\"h6\" style={{ paddingTop: \"40px\", width: \"300px\" }}>\n        Your best PRs by Lift\n      </Typography>\n      <PrTable />\n      <div style={{ width: \"100%\", height: \"100%\", paddingTop: \"40px\" }}>\n        <GreyButton\n          textOnButton=\"Track a new Lift\"\n          href=\"/submitlift\"\n          isRouter\n        />\n      </div>\n    </div>\n  );\n}\n","import {\n  Paper,\n  MenuList,\n  MenuItem,\n  Button,\n  Popper,\n  Grow,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React from \"react\";\n\nexport default function Menu() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (\n    event: Event | React.SyntheticEvent | React.MouseEvent\n  ) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    } else if (event.key === \"Escape\") {\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current!.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div>\n      <Button\n        color=\"inherit\"\n        ref={anchorRef}\n        id=\"composition-button\"\n        aria-controls={open ? \"composition-menu\" : undefined}\n        aria-expanded={open ? \"true\" : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n      >\n        Dashboard\n      </Button>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        placement=\"bottom-start\"\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom-start\" ? \"left top\" : \"left bottom\",\n            }}\n          >\n            <Paper>\n              <MenuList\n                autoFocusItem={open}\n                id=\"composition-menu\"\n                aria-labelledby=\"composition-button\"\n                onKeyDown={handleListKeyDown}\n              >\n                <MenuItem\n                  component={RouterLink}\n                  to=\"/prs\"\n                  onClick={handleClose}\n                >\n                  Show PRs\n                </MenuItem>\n                <MenuItem\n                  component={RouterLink}\n                  to=\"/alllifts\"\n                  onClick={handleClose}\n                >\n                  Show all Lifts\n                </MenuItem>\n              </MenuList>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Button, Link } from \"@material-ui/core\";\nimport Menu from \"./menu\";\n\nexport default function NavBar() {\n  return (\n    <div className=\"NavBar\" style={{ flexGrow: 1 }}>\n      <AppBar style={{ background: \"#282c34\" }} position=\"static\">\n        <Toolbar>\n          <Link\n            component={RouterLink}\n            to=\"/\"\n            variant=\"h6\"\n            color=\"inherit\"\n            style={{ flexGrow: 1, textDecoration: \"none\" }}\n          >\n            Lifting Log\n          </Link>\n          <Menu />\n          <Button color=\"inherit\" component={RouterLink} to=\"/submitlift\">\n            New Lift\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { DbConnector } from \"../models/dbconnector\";\nimport { Lift } from \"../models/lift\";\nimport {\n  Table,\n  TableContainer,\n  Paper,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Header, Body } from \"./tableelements\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"80%\",\n    height: \"auto\",\n    marginTop: \"40px\",\n  },\n});\n\nconst tableColumns = [\"Exercise\", \"Weight\", \"Reps\", \"Date\", \"e1RM\"];\n\nexport default function LiftsTable() {\n  const dbConnector = new DbConnector();\n  const classes = useStyles();\n  const [lifts, setLifts] = useState<Lift[]>([]);\n\n  useEffect(() => {\n    fillAllLifts();\n  });\n\n  async function fillAllLifts() {\n    setLifts((await dbConnector.getAllEntries().sortBy(\"Date\")).reverse());\n  }\n\n  if (lifts.length > 0) {\n    return (\n      <TableContainer className={classes.table} component={Paper}>\n        <Table>\n          <Header columns={tableColumns} />\n          <Body pr_lifts={lifts} />\n        </Table>\n      </TableContainer>\n    );\n  } else {\n    return (\n      <Typography\n        variant=\"subtitle1\"\n        style={{ paddingTop: \"20px\", width: \"300px\" }}\n      >\n        ... is empty.\n      </Typography>\n    );\n  }\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport LiftsTable from \"../components/liftstable\";\nimport GreyButton from \"../components/button\";\n\nexport default function AllLifts() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n        marginLeft: \"300px\",\n        marginRight: \"300px\",\n      }}\n    >\n      <Typography variant=\"h6\" style={{ paddingTop: \"40px\", width: \"300px\" }}>\n        Your Lifting History\n      </Typography>\n      <LiftsTable />\n      <div style={{ width: \"100%\", height: \"100%\", paddingTop: \"40px\" }}>\n        <GreyButton\n          textOnButton=\"Track a new Lift\"\n          href=\"/submitlift\"\n          isRouter\n        />\n      </div>\n    </div>\n  );\n}\n","import { Container } from \"@material-ui/core\";\nimport React from \"react\";\nimport SubmitLift from \"./views/submitlift\";\nimport Home from \"./views/home\";\nimport PRs from \"./views/prs\";\nimport NavBar from \"./components/navbar\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AllLifts from \"./views/lifts\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Container disableGutters maxWidth={false}>\n          <NavBar />\n        </Container>\n      </div>\n      <Switch>\n        <Route path=\"/prs\">\n          <PRs />\n        </Route>\n        <Route path=\"/alllifts\">\n          <AllLifts />\n        </Route>\n        <Route path=\"/submitlift\">\n          <SubmitLift />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}